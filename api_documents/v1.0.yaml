openapi: 3.0.3
info:
  title: Task Manager API
  version: 1.0.0
  description: 'Task Manager API: An API for managing tasks efficiently within your
    organization or project.'
paths:
  /tasks/:
    get:
      operationId: tasks_list
      parameters:
      - in: query
        name: creation_date
        schema:
          type: string
          format: date-time
      - in: query
        name: priority
        schema:
          type: integer
          enum:
          - 1
          - 2
          - 3
        description: |-
          * `1` - Low
          * `2` - Medium
          * `3` - High
      - in: query
        name: status
        schema:
          type: string
          enum:
          - archived
          - completed
          - in_progress
          - on_hold
          - paused
          - pending
        description: |-
          * `pending` - Pending
          * `paused` - Paused
          * `archived` - Archived
          * `on_hold` - On Hold
          * `in_progress` - In Progress
          * `completed` - Completed
      - in: query
        name: title
        schema:
          type: string
      tags:
      - tasks
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tasks'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tasks'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tasks'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tasks'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: ''
  /tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tasks'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tasks'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tasks'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTasks'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTasks'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTasks'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tasks'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    PatchedTasks:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 300
        description:
          type: string
        creation_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        created_by:
          type: integer
        assigned_to:
          type: array
          items:
            type: integer
            nullable: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_tasks:
          type: array
          items:
            $ref: '#/components/schemas/Tasks'
          readOnly: true
        created_tasks:
          type: array
          items:
            $ref: '#/components/schemas/Tasks'
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        phone_number:
          type: string
          maxLength: 20
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_staff:
          type: boolean
        is_active:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
    PriorityEnum:
      enum:
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `1` - Low
        * `2` - Medium
        * `3` - High
    StatusEnum:
      enum:
      - pending
      - paused
      - archived
      - on_hold
      - in_progress
      - completed
      type: string
      description: |-
        * `pending` - Pending
        * `paused` - Paused
        * `archived` - Archived
        * `on_hold` - On Hold
        * `in_progress` - In Progress
        * `completed` - Completed
    Tasks:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 300
        description:
          type: string
        creation_date:
          type: string
          format: date-time
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        priority:
          allOf:
          - $ref: '#/components/schemas/PriorityEnum'
          minimum: -2147483648
          maximum: 2147483647
        created_by:
          type: integer
        assigned_to:
          type: array
          items:
            type: integer
            nullable: true
      required:
      - created_by
      - creation_date
      - id
      - title
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        assigned_tasks:
          type: array
          items:
            $ref: '#/components/schemas/Tasks'
          readOnly: true
        created_tasks:
          type: array
          items:
            $ref: '#/components/schemas/Tasks'
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        phone_number:
          type: string
          maxLength: 20
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_staff:
          type: boolean
        is_active:
          type: boolean
        date_joined:
          type: string
          format: date-time
          readOnly: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - assigned_tasks
      - created_tasks
      - date_joined
      - id
      - password
      - phone_number
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
